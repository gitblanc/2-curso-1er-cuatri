/**
 * 
 */
package proyecto1;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

/**
 * @author blanc
 *
 */
public class TestBench {

	public static Object testAlgorithm(String className, String methodName, double n) { // n = carga a la que voy a
																						// someter
																						// al método
		Object obj;
		try {
			obj = Class.forName(className).getDeclaredConstructor().newInstance();
			Method method = obj.getClass().getMethod(methodName, double.class);
			return method.invoke(obj, n);
		} catch (InstantiationException | IllegalAccessException | IllegalArgumentException | InvocationTargetException
				| NoSuchMethodException | SecurityException | ClassNotFoundException e) {
			e.printStackTrace();
		}
		return null;

	}

	public static void test(int times, int startN, int endN, String className, String methodName) {
		for (int workLoad = startN; workLoad < endN; workLoad++) {
			long startTime = System.currentTimeMillis();
			for (int time = 0; time < times; time++)
				result = testAlgorithm(className, methodName, workLoad);
			long finalTime = System.currentTimeMillis();
			System.out.println(
					"Carga:" + workLoad + ", Result:" + result + ", Tiempo:" + ((finalTime - startTime) / times));
		}
	}
}
